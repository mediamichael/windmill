/**
 * Flowtype definitions for dist/grid/lane/opt.d.ts
 * Generated by Flowgen from a Typescript Definition
 * @flow
 */
import { LaneOperator } from ".";

/**
 * [object Object],[object Object],[object Object]
 * @example <img alt="grid greedy example" src="media://grid-opt.png" width="200">
 */
export type OptOperator = {
  /**
   * Set whether to used compressed output
   *
   * If output is compressed then the number of crossings will be minimized
   * subject to the fewest number of lanes necessary. (default: false)
   */
  compressed(val: boolean): OptOperator,

  /**
   * Get the current compressed setting
   */
  compressed(): boolean,

  /**
   * Set whether to also minimize distance between connected nodes
   *
   * This adds more variables and constraints so will take longer, but will
   * likely produce a better layout. (default: true)
   */
  dist(val: boolean): OptOperator,

  /**
   * get whether the current layout minimized distance
   */
  dist(): boolean,
  ...
} & LaneOperator<mixed, mixed>;

/**
 * [object Object],[object Object],[object Object],[object Object],[object Object]
 */
declare export function opt(...args: empty[]): OptOperator;
