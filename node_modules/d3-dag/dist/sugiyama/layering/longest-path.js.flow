/**
 * Flowtype definitions for dist/sugiyama/layering/longest-path.d.ts
 * Generated by Flowgen from a Typescript Definition
 * @flow
 */
import { LayeringOperator } from ".";

/**
 * [object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object]
 */
export type LongestPathOperator = {
  /**
   * Set whether longest path should go top down or not. If set to true, the
   * longest path will start at the top, putting nodes as close to the top as
   * possible. (default: true)
   */
  topDown(val: boolean): LongestPathOperator,

  /**
   * Get whether or not this is using topDown.
   */
  topDown(): boolean,
  ...
} & LayeringOperator<mixed, mixed>;

/**
 * [object Object],[object Object],[object Object],[object Object],[object Object]
 */
declare export function longestPath(...args: empty[]): LongestPathOperator;
