/**
 * Flowtype definitions for dist/sugiyama/layering/simplex.d.ts
 * Generated by Flowgen from a Typescript Definition
 * @flow
 */
// see https://gist.github.com/thecotne/6e5969f4aaf8f253985ed36b30ac9fe0
type $FlowGen$If<X: boolean, Then, Else = empty> = $Call<
  ((true, Then, Else) => Then) & ((false, Then, Else) => Else),
  X,
  Then,
  Else
>;

type $FlowGen$Assignable<A, B> = $Call<
  ((...r: [B]) => true) & ((...r: [A]) => false),
  A
>;

import { GroupAccessor, LayeringOperator, RankAccessor } from ".";
import { Up } from "../../utils";

/**
 * simplex operator operators
 */
export interface Operators<N = empty, L = empty> {
  /**
   * rank operator
   */
  rank: RankAccessor<N, L>;

  /**
   * group operator
   */
  group: GroupAccessor<N, L>;
}
/**
 * the node datum of a set of operators
 */
export type OpsNodeDatum<Ops: Operators<>> = $FlowGen$If<
  $FlowGen$Assignable<Ops, Operators<N, empty>>,
  N,
  empty
>;
/**
 * the link datum of a set of operators
 */
export type OpsLinkDatum<Ops: Operators<>> = $FlowGen$If<
  $FlowGen$Assignable<Ops, Operators<empty, L>>,
  L,
  empty
>;
/**
 * [object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object]
 */
export type SimplexOperator<Ops: Operators<> = Operators<>> = {
  /**
   * [object Object],[object Object],[object Object]
   */
  rank<NewRank: RankAccessor>(newRank: NewRank): SimplexOperator<
    Up<
      Ops,
      {
        /**
         * new rank
         */
        rank: NewRank,
        ...
      }
    >
  >,

  /**
   * [object Object],[object Object],[object Object]
   */
  rank(): $PropertyType<Ops, "rank">,

  /**
   * [object Object],[object Object],[object Object]
   */
  group<NewGroup: GroupAccessor>(newGroup: NewGroup): SimplexOperator<
    Up<
      Ops,
      {
        /**
         * new group
         */
        group: NewGroup,
        ...
      }
    >
  >,

  /**
   * [object Object],[object Object],[object Object]
   */
  group(): $PropertyType<Ops, "group">,
  ...
} & LayeringOperator<OpsNodeDatum<Ops>, OpsLinkDatum<Ops>>;

/**
 * default simplex operator
 */
export type DefaultSimplexOperator = SimplexOperator<{
  /**
   * unconstrained rank
   */
  rank: RankAccessor<mixed, mixed>,

  /**
   * unconstrained group
   */
  group: GroupAccessor<mixed, mixed>,
  ...
}>;
/**
 * [object Object],[object Object],[object Object],[object Object],[object Object]
 */
declare export function simplex(...args: empty[]): DefaultSimplexOperator;
