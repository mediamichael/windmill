/**
 * Flowtype definitions for dist/sugiyama/utils.d.ts
 * Generated by Flowgen from a Typescript Definition
 * @flow
 */
import { Dag, DagLink, DagNode } from "../dag";

/**
 * [object Object],[object Object],[object Object]
 */
export type SugiData<NodeDatum = mixed, LinkDatum = mixed> =
  | {
      /**
       * layer of the sugi node
       */
      layer: number,

      /**
       * original node this sugi node wraps
       */
      node: DagNode<NodeDatum, LinkDatum>,
      ...
    }
  | {
      /**
       * layer of the sugi node
       */
      layer: number,

      /**
       * original link this sugi node is on
       */
      link: DagLink<NodeDatum, LinkDatum>,
      ...
    };
/**
 * [object Object],[object Object],[object Object],[object Object],[object Object]
 */
export type SugiNode<NodeDatum = mixed, LinkDatum = mixed> = DagNode<
  SugiData<NodeDatum, LinkDatum>,
  void
>;
/**
 * [object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object]
 */
declare export function sugify<N, L>(dag: Dag<N, L>): SugiNode<N, L>[][];

/**
 * [object Object],[object Object],[object Object],[object Object],[object Object]
 */
declare export function unsugify(
  layers: $ReadOnlyArray<$ReadOnlyArray<SugiNode<>>>
): void;

/**
 * Verify that x coordinates of a layering are consistent
 *
 * Note, we don't verify that node widths were respected.
 */
declare export function verifyCoordAssignment(
  layers: $ReadOnlyArray<$ReadOnlyArray<SugiNode<>>>,
  width: number
): void;

/**
 * [object Object],[object Object],[object Object],[object Object],[object Object]
 */
declare export function scaleLayers(
  layers: $ReadOnlyArray<$ReadOnlyArray<DagNode>>,
  xscale: number,
  yscale: number
): void;

/**
 * compute the number of crossings in a layered sugi node
 */
declare export function crossings(
  layers: $ReadOnlyArray<$ReadOnlyArray<SugiNode<>>>
): number;
