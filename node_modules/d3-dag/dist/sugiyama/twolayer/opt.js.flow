/**
 * Flowtype definitions for dist/sugiyama/twolayer/opt.d.ts
 * Generated by Flowgen from a Typescript Definition
 * @flow
 */
import { TwolayerOperator } from ".";

/**
 * How to handle large dags
 *
 * Setting this higher than `"small"` may result in very long run times or
 * crashes.
 */
export type LargeHandling = "small" | "medium" | "large";
/**
 * [object Object],[object Object],[object Object],[object Object],[object Object]
 */
export type OptOperator = {
  /**
   * Set the large dag handling
   *
   * Setting to anything but `"small"` will allow running on larger dags, but
   * the layout may run forever, or crash the vm. (default: `"small"`)
   */
  large(val: LargeHandling): OptOperator,

  /**
   * Return the handling of large graphs.
   */
  large(): LargeHandling,

  /**
   * Set whether to also minimize distance between nodes that share a parent or
   * child
   *
   * This adds more variables and constraints so will take longer, but will
   * likely produce a better layout. (default: false)
   */
  dist(val: boolean): OptOperator,

  /**
   * get whether the current layout minimized distance
   */
  dist(): boolean,
  ...
} & TwolayerOperator<mixed, mixed>;

/**
 * [object Object],[object Object],[object Object],[object Object],[object Object]
 */
declare export function opt(...args: empty[]): OptOperator;
