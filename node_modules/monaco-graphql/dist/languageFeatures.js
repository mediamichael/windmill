"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.HoverAdapter = exports.DocumentFormattingAdapter = exports.CompletionAdapter = exports.toCompletion = exports.toCompletionItemKind = exports.DiagnosticsAdapter = void 0;
var monaco_editor_1 = require("./monaco-editor");
var editor_api_1 = require("monaco-editor/esm/vs/editor/editor.api");
var graphql_language_service_1 = require("graphql-language-service");
var utils_1 = require("./utils");
var DiagnosticsAdapter = (function () {
    function DiagnosticsAdapter(defaults, _worker) {
        var e_1, _a;
        var _this = this;
        this.defaults = defaults;
        this._worker = _worker;
        this._disposables = [];
        this._listener = Object.create(null);
        this._worker = _worker;
        var onChangeTimeout;
        var onModelAdd = function (model) {
            var _a;
            var modeId = (0, utils_1.getModelLanguageId)(model);
            if (modeId !== _this.defaults.languageId) {
                return;
            }
            var modelUri = model.uri.toString();
            var jsonValidationForModel = ((_a = defaults.diagnosticSettings) === null || _a === void 0 ? void 0 : _a.validateVariablesJSON) &&
                defaults.diagnosticSettings.validateVariablesJSON[modelUri];
            onChangeTimeout = setTimeout(function () {
                void _this._doValidate(model.uri, modeId, jsonValidationForModel);
            }, 400);
            _this._listener[modelUri] = model.onDidChangeContent(function () {
                clearTimeout(onChangeTimeout);
                onChangeTimeout = setTimeout(function () {
                    void _this._doValidate(model.uri, modeId, jsonValidationForModel);
                }, 400);
            });
        };
        var onModelRemoved = function (model) {
            editor_api_1.editor.setModelMarkers(model, _this.defaults.languageId, []);
            var uriStr = model.uri.toString();
            var listener = _this._listener[uriStr];
            if (listener) {
                listener.dispose();
                delete _this._listener[uriStr];
            }
        };
        this._disposables.push(editor_api_1.editor.onDidCreateModel(onModelAdd), {
            dispose: function () {
                clearTimeout(onChangeTimeout);
            },
        }, editor_api_1.editor.onWillDisposeModel(function (model) {
            onModelRemoved(model);
        }), editor_api_1.editor.onDidChangeModelLanguage(function (event) {
            onModelRemoved(event.model);
            onModelAdd(event.model);
        }), {
            dispose: function () {
                for (var key in _this._listener) {
                    _this._listener[key].dispose();
                }
            },
        }, defaults.onDidChange(function () {
            var e_2, _a;
            try {
                for (var _b = __values(editor_api_1.editor.getModels()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var model = _c.value;
                    if ((0, utils_1.getModelLanguageId)(model) === _this.defaults.languageId) {
                        onModelRemoved(model);
                        onModelAdd(model);
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }));
        try {
            for (var _b = __values(editor_api_1.editor.getModels()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var model = _c.value;
                if ((0, utils_1.getModelLanguageId)(model) === this.defaults.languageId) {
                    onModelAdd(model);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    DiagnosticsAdapter.prototype.dispose = function () {
        var e_3, _a;
        try {
            for (var _b = __values(this._disposables), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                d === null || d === void 0 ? void 0 : d.dispose();
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        this._disposables = [];
    };
    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId, variablesUris) {
        var _a, _b, _c;
        return __awaiter(this, void 0, void 0, function () {
            var worker, diagnostics, jsonSchema, schemaUri_1, configResult, currentSchemas;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0: return [4, this._worker(resource)];
                    case 1:
                        worker = _d.sent();
                        if (!worker) {
                            return [2];
                        }
                        return [4, worker.doValidation(resource.toString())];
                    case 2:
                        diagnostics = _d.sent();
                        editor_api_1.editor.setModelMarkers(editor_api_1.editor.getModel(resource), languageId, diagnostics);
                        if (!variablesUris) return [3, 5];
                        return [4, Promise.resolve().then(function () { return __importStar(require('monaco-editor/esm/vs/language/json/monaco.contribution.js')); })];
                    case 3:
                        _d.sent();
                        if (variablesUris.length < 1) {
                            throw new Error('no variables URI strings provided to validate');
                        }
                        return [4, worker.doGetVariablesJSONSchema(resource.toString())];
                    case 4:
                        jsonSchema = _d.sent();
                        if (!jsonSchema) {
                            return [2];
                        }
                        schemaUri_1 = monaco_editor_1.Uri.file(variablesUris[0].replace('.json', '-schema.json')).toString();
                        configResult = {
                            uri: schemaUri_1,
                            schema: jsonSchema,
                            fileMatch: variablesUris,
                        };
                        currentSchemas = ((_a = monaco_editor_1.languages.json.jsonDefaults.diagnosticsOptions.schemas) === null || _a === void 0 ? void 0 : _a.filter(function (s) { return s.uri !== schemaUri_1; })) || [];
                        monaco_editor_1.languages.json.jsonDefaults.setDiagnosticsOptions(__assign(__assign({ schemaValidation: 'error', validate: true }, (_c = (_b = this.defaults) === null || _b === void 0 ? void 0 : _b.diagnosticSettings) === null || _c === void 0 ? void 0 : _c.jsonDiagnosticSettings), { schemas: __spreadArray(__spreadArray([], __read(currentSchemas), false), [configResult], false), enableSchemaRequest: false }));
                        _d.label = 5;
                    case 5: return [2];
                }
            });
        });
    };
    return DiagnosticsAdapter;
}());
exports.DiagnosticsAdapter = DiagnosticsAdapter;
var mKind = monaco_editor_1.languages.CompletionItemKind;
var kindMap = (_a = {},
    _a[graphql_language_service_1.CompletionItemKind.Text] = mKind.Text,
    _a[graphql_language_service_1.CompletionItemKind.Method] = mKind.Method,
    _a[graphql_language_service_1.CompletionItemKind.Function] = mKind.Function,
    _a[graphql_language_service_1.CompletionItemKind.Constructor] = mKind.Constructor,
    _a[graphql_language_service_1.CompletionItemKind.Field] = mKind.Field,
    _a[graphql_language_service_1.CompletionItemKind.Variable] = mKind.Variable,
    _a[graphql_language_service_1.CompletionItemKind.Class] = mKind.Class,
    _a[graphql_language_service_1.CompletionItemKind.Interface] = mKind.Interface,
    _a[graphql_language_service_1.CompletionItemKind.Module] = mKind.Module,
    _a[graphql_language_service_1.CompletionItemKind.Property] = mKind.Property,
    _a[graphql_language_service_1.CompletionItemKind.Unit] = mKind.Unit,
    _a[graphql_language_service_1.CompletionItemKind.Value] = mKind.Value,
    _a[graphql_language_service_1.CompletionItemKind.Enum] = mKind.Enum,
    _a[graphql_language_service_1.CompletionItemKind.Keyword] = mKind.Keyword,
    _a[graphql_language_service_1.CompletionItemKind.Snippet] = mKind.Snippet,
    _a[graphql_language_service_1.CompletionItemKind.Color] = mKind.Color,
    _a[graphql_language_service_1.CompletionItemKind.File] = mKind.File,
    _a[graphql_language_service_1.CompletionItemKind.Reference] = mKind.Reference,
    _a[graphql_language_service_1.CompletionItemKind.Folder] = mKind.Folder,
    _a[graphql_language_service_1.CompletionItemKind.EnumMember] = mKind.EnumMember,
    _a[graphql_language_service_1.CompletionItemKind.Constant] = mKind.Constant,
    _a[graphql_language_service_1.CompletionItemKind.Struct] = mKind.Struct,
    _a[graphql_language_service_1.CompletionItemKind.Event] = mKind.Event,
    _a[graphql_language_service_1.CompletionItemKind.Operator] = mKind.Operator,
    _a[graphql_language_service_1.CompletionItemKind.TypeParameter] = mKind.TypeParameter,
    _a);
function toCompletionItemKind(kind) {
    return kind in kindMap ? kindMap[kind] : mKind.Text;
}
exports.toCompletionItemKind = toCompletionItemKind;
function toCompletion(entry) {
    var _a;
    var suggestions = {
        range: entry.range,
        kind: toCompletionItemKind(entry.kind),
        label: entry.label,
        insertText: (_a = entry.insertText) !== null && _a !== void 0 ? _a : entry.label,
        insertTextRules: entry.insertText
            ? monaco_editor_1.languages.CompletionItemInsertTextRule.InsertAsSnippet
            : undefined,
        sortText: entry.sortText,
        filterText: entry.filterText,
        documentation: entry.documentation,
        detail: entry.detail,
        command: entry.command,
    };
    return suggestions;
}
exports.toCompletion = toCompletion;
var CompletionAdapter = (function () {
    function CompletionAdapter(_worker) {
        this._worker = _worker;
        this._worker = _worker;
    }
    Object.defineProperty(CompletionAdapter.prototype, "triggerCharacters", {
        get: function () {
            return [':', '$', ' ', '(', '@'];
        },
        enumerable: false,
        configurable: true
    });
    CompletionAdapter.prototype.provideCompletionItems = function (model, position, _context, _token) {
        return __awaiter(this, void 0, void 0, function () {
            var resource, worker, completionItems, err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        resource = model.uri;
                        return [4, this._worker(model.uri)];
                    case 1:
                        worker = _a.sent();
                        return [4, worker.doComplete(resource.toString(), position)];
                    case 2:
                        completionItems = _a.sent();
                        return [2, {
                                incomplete: true,
                                suggestions: completionItems.map(toCompletion),
                            }];
                    case 3:
                        err_1 = _a.sent();
                        console.error('Error fetching completion items', err_1);
                        return [2, { suggestions: [] }];
                    case 4: return [2];
                }
            });
        });
    };
    return CompletionAdapter;
}());
exports.CompletionAdapter = CompletionAdapter;
var DocumentFormattingAdapter = (function () {
    function DocumentFormattingAdapter(_worker) {
        this._worker = _worker;
        this._worker = _worker;
    }
    DocumentFormattingAdapter.prototype.provideDocumentFormattingEdits = function (document, _options, _token) {
        return __awaiter(this, void 0, void 0, function () {
            var worker, formatted;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this._worker(document.uri)];
                    case 1:
                        worker = _a.sent();
                        return [4, worker.doFormat(document.uri.toString())];
                    case 2:
                        formatted = _a.sent();
                        if (!formatted) {
                            return [2, []];
                        }
                        return [2, [
                                {
                                    range: document.getFullModelRange(),
                                    text: formatted,
                                },
                            ]];
                }
            });
        });
    };
    return DocumentFormattingAdapter;
}());
exports.DocumentFormattingAdapter = DocumentFormattingAdapter;
var HoverAdapter = (function () {
    function HoverAdapter(_worker) {
        this._worker = _worker;
    }
    HoverAdapter.prototype.provideHover = function (model, position, _token) {
        return __awaiter(this, void 0, void 0, function () {
            var resource, worker, hoverItem;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        resource = model.uri;
                        return [4, this._worker(model.uri)];
                    case 1:
                        worker = _a.sent();
                        return [4, worker.doHover(resource.toString(), position)];
                    case 2:
                        hoverItem = _a.sent();
                        if (hoverItem) {
                            return [2, {
                                    range: hoverItem.range,
                                    contents: [{ value: hoverItem.content }],
                                }];
                        }
                        return [2, {
                                contents: [],
                            }];
                }
            });
        });
    };
    HoverAdapter.prototype.dispose = function () { };
    return HoverAdapter;
}());
exports.HoverAdapter = HoverAdapter;
//# sourceMappingURL=languageFeatures.js.map