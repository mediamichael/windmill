"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.create = exports.GraphQLWorker = void 0;
var graphql_language_service_1 = require("graphql-language-service");
var LanguageService_1 = require("./LanguageService");
var utils_1 = require("./utils");
var GraphQLWorker = (function () {
    function GraphQLWorker(ctx, createData) {
        this._ctx = ctx;
        this._languageService = new LanguageService_1.LanguageService(createData.languageConfig);
        this._formattingOptions = createData.formattingOptions;
    }
    GraphQLWorker.prototype.doValidation = function (uri) {
        return __awaiter(this, void 0, void 0, function () {
            var documentModel, document_1, graphqlDiagnostics;
            return __generator(this, function (_a) {
                try {
                    documentModel = this._getTextModel(uri);
                    document_1 = documentModel === null || documentModel === void 0 ? void 0 : documentModel.getValue();
                    if (!document_1) {
                        return [2, []];
                    }
                    graphqlDiagnostics = this._languageService.getDiagnostics(uri, document_1);
                    return [2, graphqlDiagnostics.map(utils_1.toMarkerData)];
                }
                catch (err) {
                    console.error(err);
                    return [2, []];
                }
                return [2];
            });
        });
    };
    GraphQLWorker.prototype.doComplete = function (uri, position) {
        return __awaiter(this, void 0, void 0, function () {
            var documentModel, document_2, graphQLPosition, suggestions;
            return __generator(this, function (_a) {
                try {
                    documentModel = this._getTextModel(uri);
                    document_2 = documentModel === null || documentModel === void 0 ? void 0 : documentModel.getValue();
                    if (!document_2) {
                        return [2, []];
                    }
                    graphQLPosition = (0, utils_1.toGraphQLPosition)(position);
                    suggestions = this._languageService.getCompletion(uri, document_2, graphQLPosition);
                    return [2, suggestions.map(function (suggestion) { return (0, utils_1.toCompletion)(suggestion); })];
                }
                catch (err) {
                    console.error(err);
                    return [2, []];
                }
                return [2];
            });
        });
    };
    GraphQLWorker.prototype.doHover = function (uri, position) {
        return __awaiter(this, void 0, void 0, function () {
            var documentModel, document_3, graphQLPosition, hover;
            return __generator(this, function (_a) {
                try {
                    documentModel = this._getTextModel(uri);
                    document_3 = documentModel === null || documentModel === void 0 ? void 0 : documentModel.getValue();
                    if (!document_3) {
                        return [2, null];
                    }
                    graphQLPosition = (0, utils_1.toGraphQLPosition)(position);
                    hover = this._languageService.getHover(uri, document_3, graphQLPosition);
                    return [2, {
                            content: hover,
                            range: (0, utils_1.toMonacoRange)((0, graphql_language_service_1.getRange)({
                                column: graphQLPosition.character,
                                line: graphQLPosition.line,
                            }, document_3)),
                        }];
                }
                catch (err) {
                    console.error(err);
                    return [2, null];
                }
                return [2];
            });
        });
    };
    GraphQLWorker.prototype.doGetVariablesJSONSchema = function (uri) {
        return __awaiter(this, void 0, void 0, function () {
            var documentModel, document, jsonSchema;
            return __generator(this, function (_a) {
                documentModel = this._getTextModel(uri);
                document = documentModel === null || documentModel === void 0 ? void 0 : documentModel.getValue();
                if (!documentModel || !document) {
                    return [2, null];
                }
                jsonSchema = this._languageService.getVariablesJSONSchema(uri, document, { useMarkdownDescription: true });
                if (jsonSchema) {
                    jsonSchema.$id = 'monaco://variables-schema.json';
                    jsonSchema.title = 'GraphQL Variables';
                    return [2, jsonSchema];
                }
                return [2, null];
            });
        });
    };
    GraphQLWorker.prototype.doFormat = function (uri) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var documentModel, document, prettierStandalone, prettierGraphqlParser;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        documentModel = this._getTextModel(uri);
                        document = documentModel === null || documentModel === void 0 ? void 0 : documentModel.getValue();
                        if (!documentModel || !document) {
                            return [2, null];
                        }
                        return [4, Promise.resolve().then(function () { return __importStar(require('prettier/standalone')); })];
                    case 1:
                        prettierStandalone = _b.sent();
                        return [4, Promise.resolve().then(function () { return __importStar(require('prettier/parser-graphql')); })];
                    case 2:
                        prettierGraphqlParser = _b.sent();
                        return [2, prettierStandalone.format(document, __assign({ parser: 'graphql', plugins: [prettierGraphqlParser] }, (_a = this._formattingOptions) === null || _a === void 0 ? void 0 : _a.prettierConfig))];
                }
            });
        });
    };
    GraphQLWorker.prototype._getTextModel = function (uri) {
        var e_1, _a;
        var models = this._ctx.getMirrorModels();
        try {
            for (var models_1 = __values(models), models_1_1 = models_1.next(); !models_1_1.done; models_1_1 = models_1.next()) {
                var model = models_1_1.value;
                if (model.uri.toString() === uri) {
                    return model;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (models_1_1 && !models_1_1.done && (_a = models_1.return)) _a.call(models_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return null;
    };
    GraphQLWorker.prototype.doUpdateSchema = function (schema) {
        return this._languageService.updateSchema(schema);
    };
    GraphQLWorker.prototype.doUpdateSchemas = function (schemas) {
        return this._languageService.updateSchemas(schemas);
    };
    return GraphQLWorker;
}());
exports.GraphQLWorker = GraphQLWorker;
exports.default = {
    GraphQLWorker: GraphQLWorker,
};
function create(ctx, createData) {
    return new GraphQLWorker(ctx, createData);
}
exports.create = create;
//# sourceMappingURL=GraphQLWorker.js.map