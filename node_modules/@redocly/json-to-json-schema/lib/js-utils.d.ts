export declare function mapObjectValues<T, P>(obj: Record<string, T>, cb: (key: string, value: T) => P): Record<string, P>;
declare type ObjectKey = string | number | symbol;
export declare function groupByField<K extends ObjectKey, TItem extends Record<K, any>>(collection: TItem[], field: K): {
    group: TItem[K];
    values: TItem[];
}[];
export declare function intersect<T>(sets: Set<T>[]): Set<T>;
export {};
