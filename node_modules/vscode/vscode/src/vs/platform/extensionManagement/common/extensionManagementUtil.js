import { compareIgnoreCase } from 'monaco-editor/esm/vs/base/common/strings.js';
import { UNDEFINED_PUBLISHER } from 'monaco-editor/esm/vs/platform/extensions/common/extensions.js';
function areSameExtensions(a, b) {
    if (a.uuid && b.uuid) {
        return a.uuid === b.uuid;
    }
    if (a.id === b.id) {
        return true;
    }
    return compareIgnoreCase(a.id, b.id) === 0;
}
function getExtensionId(publisher, name) {
    return `${publisher}.${name}`;
}
function adoptToGalleryExtensionId(id) {
    return id.toLowerCase();
}
function getGalleryExtensionId(publisher, name) {
    return adoptToGalleryExtensionId(getExtensionId(publisher ?? UNDEFINED_PUBLISHER, name));
}
function getExtensionDependencies(installedExtensions, extension) {
    const dependencies = [];
    const extensions = extension.manifest.extensionDependencies?.slice(0) ?? [];
    while (extensions.length) {
        const id = extensions.shift();
        if (id && dependencies.every(e => !areSameExtensions(e.identifier, { id }))) {
            const ext = installedExtensions.filter(e => areSameExtensions(e.identifier, { id }));
            if (ext.length === 1) {
                dependencies.push(ext[0]);
                extensions.push(...(ext[0].manifest.extensionDependencies?.slice(0) ?? []));
            }
        }
    }
    return dependencies;
}
export { adoptToGalleryExtensionId, areSameExtensions, getExtensionDependencies, getExtensionId, getGalleryExtensionId };
